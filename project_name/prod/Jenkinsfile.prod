pipeline {
  agent {
    kubernetes {
        inheritFrom 'mlflow-pod-template kaniko-pod-template'
    }
  }
  stages {
    stage('checkout'){
        steps{
            checkout(
                [$class: 'GitSCM', 
                branches: [[name: '*/main']], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[$class: 'CleanBeforeCheckout']], 
                submoduleCfg: [], 
                userRemoteConfigs: [[url: 'https://github.com/demo125/example-project.git']]]
            )
        }
    }
    stage('build image') {
      steps {
        container('mlflow-container') {
            withCredentials([string(credentialsId: 'MLFLOW_S3_AWS_ACCESS_KEY_ID', variable: 'MLFLOW_S3_AWS_ACCESS_KEY_ID')]) {
                withCredentials([string(credentialsId: 'MLFLOW_S3_AWS_SECRET_ACCESS_KEY', variable: 'MLFLOW_S3_AWS_SECRET_ACCESS_KEY')]) {
                    sh 'pip install python-dotenv boto3==1.34.22'
                    dir('project_name/prod'){
                        sh 'python download_model.py'
                        sh 'ls -l model'
                    }
                }
            }
            
        }
      }
    }
    stage('update argocd deployment') {
      steps {
        container('kaniko-container') {
            dir('project_name/prod'){
                sh 'ls -l'
                sh "mkdir -p /kaniko/.docker"
                withCredentials([usernamePassword(credentialsId: 'docker-registry-credentials', passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                    sh "echo '{\"auths\":{\"$DOCKER_REGISTRY_URL\":{\"username\":\"$USER\",\"password\":\"$PASSWORD\"}}}' > /kaniko/.docker/config.json"
                    sh 'cat /kaniko/.docker/config.json'
                    sh 'executor --context=. --dockerfile Dockerfile.prod --destination $DOCKER_REGISTRY_URL/example-project-prod:$BUILD_NUMBER'
                }
            }
        }
      }
    }
  }
}
